#!/bin/bash

# Script de corre√ß√£o completa para deploy no Heroku
# Resolve o erro H10 (App crashed)

set -e

APP_NAME="mlnova-0fd22bb288f2"

echo "üîß Corrigindo configura√ß√£o para Heroku..."
echo ""

# 1. Atualizar package.json com Node.js e script correto
echo "üì¶ 1. Atualizando package.json..."

node -e "
const fs = require('fs');
const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));

// Adicionar engines
pkg.engines = {
  node: '>=18.0.0',
  npm: '>=9.0.0'
};

// Atualizar scripts
pkg.scripts = pkg.scripts || {};
pkg.scripts.start = 'node api-server.js';
pkg.scripts['heroku-postbuild'] = 'echo \"Heroku build complete\"';

fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));
console.log('‚úì package.json atualizado');
"

# 2. Garantir que Procfile est√° correto
echo ""
echo "üìù 2. Atualizando Procfile..."
cat > Procfile << 'EOF'
web: node api-server.js
EOF
echo "‚úì Procfile atualizado"

# 3. Limpar buildpacks e configurar Node.js
echo ""
echo "üèóÔ∏è  3. Configurando buildpacks Heroku..."
heroku buildpacks:clear -a "$APP_NAME" 2>/dev/null || true
heroku buildpacks:add heroku/nodejs -a "$APP_NAME"
echo "‚úì Buildpacks configurados"

# 4. Configurar stack
echo ""
echo "üîß 4. Configurando stack..."
heroku stack:set heroku-22 -a "$APP_NAME" 2>/dev/null || echo "Stack j√° configurado"
echo "‚úì Stack configurado"

# 5. Configurar vari√°veis de ambiente
echo ""
echo "‚öôÔ∏è  5. Configurando vari√°veis de ambiente..."
heroku config:set NPM_CONFIG_PRODUCTION=false -a "$APP_NAME"
heroku config:set NODE_ENV=production -a "$APP_NAME"
echo "‚úì Vari√°veis configuradas"

# 6. Verificar api-server.js
echo ""
echo "üîç 6. Verificando api-server.js..."
if [ -f "api-server.js" ]; then
  echo "‚úì api-server.js encontrado"
else
  echo "‚ùå ERRO: api-server.js n√£o encontrado!"
  exit 1
fi

# 7. Commit das altera√ß√µes
echo ""
echo "üíæ 7. Salvando altera√ß√µes..."
git add package.json Procfile
git diff --staged --quiet || git commit -m "Fix: Corrige configura√ß√£o Heroku para api-server.js

- Atualiza script start para node api-server.js
- Adiciona engines com Node.js >=18
- Configura Procfile correto
- Remove NODE_ENV do Procfile (j√° est√° nas vari√°veis)"

# 8. Deploy
echo ""
echo "üöÄ 8. Fazendo deploy para Heroku..."
echo ""

BRANCH=$(git branch --show-current)
git push heroku "$BRANCH:main" --force

# 9. Aguardar e verificar
echo ""
echo "‚è≥ 9. Aguardando app iniciar..."
sleep 10

# 10. Verificar logs
echo ""
echo "üìä 10. Verificando logs..."
heroku logs -n 30 -a "$APP_NAME"

echo ""
echo "======================================"
echo "  CORRE√á√ÉO CONCLU√çDA!"
echo "======================================"
echo ""
echo "üåê URL: https://$APP_NAME.herokuapp.com"
echo "üìä Logs: heroku logs --tail -a $APP_NAME"
echo ""

# Teste final
echo "üè• Testando aplica√ß√£o..."
sleep 5

if curl -f -s "https://$APP_NAME.herokuapp.com/health" > /dev/null 2>&1; then
  echo "‚úÖ App respondendo corretamente!"
  curl -s "https://$APP_NAME.herokuapp.com/health" | head -c 200
  echo ""
else
  echo "‚ö†Ô∏è  App ainda n√£o respondeu. Verifique os logs:"
  echo "   heroku logs --tail -a $APP_NAME"
fi

echo ""
echo "======================================"
