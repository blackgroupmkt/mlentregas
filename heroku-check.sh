#!/bin/bash

# Script de verifica√ß√£o do Heroku
# Mostra status completo da aplica√ß√£o

APP_NAME="${1:-mlnova-0fd22bb288f2}"

echo "======================================"
echo "  STATUS DO APP HEROKU: $APP_NAME"
echo "======================================"
echo ""

# 1. Buildpacks
echo "üì¶ BUILDPACKS:"
heroku buildpacks -a "$APP_NAME" 2>/dev/null || echo "  ‚ùå Erro ao obter buildpacks"
echo ""

# 2. Stack
echo "üèóÔ∏è  STACK:"
heroku stack -a "$APP_NAME" 2>/dev/null || echo "  ‚ùå Erro ao obter stack"
echo ""

# 3. Dynos
echo "‚öôÔ∏è  DYNOS:"
heroku ps -a "$APP_NAME" 2>/dev/null || echo "  ‚ùå Erro ao obter dynos"
echo ""

# 4. Vari√°veis de ambiente
echo "üîê VARI√ÅVEIS DE AMBIENTE:"
heroku config -a "$APP_NAME" 2>/dev/null | grep -E "(NODE_ENV|NPM_CONFIG|FOUR_M)" || echo "  ‚ö†Ô∏è Vari√°veis importantes n√£o encontradas"
echo ""

# 5. √öltimos logs
echo "üìä √öLTIMOS LOGS (20 linhas):"
heroku logs -n 20 -a "$APP_NAME" 2>/dev/null || echo "  ‚ùå Erro ao obter logs"
echo ""

# 6. Teste de sa√∫de
echo "üè• TESTE DE SA√öDE:"
APP_URL="https://$APP_NAME.herokuapp.com"
echo "  URL: $APP_URL"

RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "$APP_URL/health" 2>/dev/null)

if [ "$RESPONSE" = "200" ]; then
  echo "  ‚úÖ Status: OK (HTTP $RESPONSE)"
  curl -s "$APP_URL/health" | head -c 200
  echo ""
else
  echo "  ‚ùå Status: ERRO (HTTP $RESPONSE)"
fi
echo ""

echo "======================================"
echo ""

# Resumo
if [ "$RESPONSE" = "200" ]; then
  echo "‚úÖ App est√° funcionando corretamente!"
else
  echo "‚ùå App com problemas. Execute:"
  echo "   heroku logs --tail -a $APP_NAME"
fi
